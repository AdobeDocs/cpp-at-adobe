"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[798],{98900:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return p},default:function(){return g}});var n=t(87462),i=t(63366),s=(t(15007),t(64983)),o=t(91515),r=["components"],p={},d=function(e){return function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.mdx)("div",a)}},c=d("Hero"),m=d("TextBlock"),l={_frontmatter:p},u=o.Z;function g(e){var a=e.components,t=(0,i.Z)(e,r);return(0,s.mdx)(u,(0,n.Z)({},l,t,{components:a,mdxType:"MDXLayout"}),(0,s.mdx)(c,{slots:"image, heading, text1",mdxType:"Hero"}),(0,s.mdx)("p",null,(0,s.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,s.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"20.9375%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,s.mdx)("picture",{parentName:"span"},"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/cpp-at-adobe/static/9a260218c4297a6938367b68ce240a55/5530d/header_gradient.webp 320w","/cpp-at-adobe/static/9a260218c4297a6938367b68ce240a55/0c8fb/header_gradient.webp 640w","/cpp-at-adobe/static/9a260218c4297a6938367b68ce240a55/94b1e/header_gradient.webp 1280w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/cpp-at-adobe/static/9a260218c4297a6938367b68ce240a55/8980b/header_gradient.jpg 320w","/cpp-at-adobe/static/9a260218c4297a6938367b68ce240a55/56d4e/header_gradient.jpg 640w","/cpp-at-adobe/static/9a260218c4297a6938367b68ce240a55/62aaf/header_gradient.jpg 1280w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/jpeg"}),"\n          ",(0,s.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/cpp-at-adobe/static/9a260218c4297a6938367b68ce240a55/62aaf/header_gradient.jpg",alt:"Hero image",title:"Hero image",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,s.mdx)("h1",{id:"c-whitepapers"},"C++ Whitepapers"),(0,s.mdx)("p",null,"Our library of C++ whitepapers, providing insights, methodologies, and advanced techniques"),(0,s.mdx)("h2",{id:"featured"},"Featured"),(0,s.mdx)(m,{slots:"image, heading, text, links",width:"33%",mdxType:"TextBlock"}),(0,s.mdx)("p",null,(0,s.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"184px"}},"\n      ",(0,s.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"100%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,s.mdx)("picture",{parentName:"span"},"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/cpp-at-adobe/static/e6e4c2f6083cb1e89a1fddf26495dd0b/0d81f/cpp-successor-update.webp 184w"],sizes:"(max-width: 184px) 100vw, 184px",type:"image/webp"}),"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/cpp-at-adobe/static/e6e4c2f6083cb1e89a1fddf26495dd0b/36f18/cpp-successor-update.jpg 184w"],sizes:"(max-width: 184px) 100vw, 184px",type:"image/jpeg"}),"\n          ",(0,s.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/cpp-at-adobe/static/e6e4c2f6083cb1e89a1fddf26495dd0b/36f18/cpp-successor-update.jpg",alt:"C++ logo",title:"C++ logo",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,s.mdx)("h4",{id:"memory-safety-and-c-successors"},"Memory safety and C++ successors"),(0,s.mdx)("p",null,"Software exploits increasingly harm consumers and threaten national security.\nMemory safe programming languages provide substantial protection and some groups\nare calling for legislation incentivizing their adoption. Unfortunately, it\nisn't clear how companies with large existing C++ codebases can adapt. In an\neffort to help answer that question, this paper explores the adoption\nfeasibility of several memory safe alternatives to C++. - ",(0,s.mdx)("em",{parentName:"p"},"David Sankel")," - May\n22, 2023"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"./cpp-successor-update/"},"View Whitepaper")),(0,s.mdx)(m,{slots:"image, heading, text, links",width:"33%",mdxType:"TextBlock"}),(0,s.mdx)("p",null,(0,s.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"240px"}},"\n      ",(0,s.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"112.5%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,s.mdx)("picture",{parentName:"span"},"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/cpp-at-adobe/static/49677fcf71a31e8e3f93d65ae6deb6fb/04b55/c_plus_plus_logo.webp 240w"],sizes:"(max-width: 240px) 100vw, 240px",type:"image/webp"}),"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/cpp-at-adobe/static/49677fcf71a31e8e3f93d65ae6deb6fb/072e7/c_plus_plus_logo.png 240w"],sizes:"(max-width: 240px) 100vw, 240px",type:"image/png"}),"\n          ",(0,s.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/cpp-at-adobe/static/49677fcf71a31e8e3f93d65ae6deb6fb/072e7/c_plus_plus_logo.png",alt:"C++ logo",title:"C++ logo",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,s.mdx)("h4",{id:"safety-in-the-context-of-c"},"Safety in the context of C++"),(0,s.mdx)("p",null,"Safety, particularly ",(0,s.mdx)("em",{parentName:"p"},"memory safety"),', is a growing concern in the C++ community\ndriven by the security implications of memory unsafe systems. Consumer Reports\nstates, "Roughly 60 to 70 percent of browser and kernel vulnerabilities, and\nsecurity bugs found in C/C++ code bases, are due to memory unsafety.". A recent\nNSA report states, "...the overarching software community across the private\nsector, academia, and the U.S. Government have begun initiatives to drive the\nsoftware development culture towards utilizing memory safe languages." The White\nHouse National Cybersecurity Strategy plans to hold companies responsible for\nretained data and increase liability for insecure software. Memory safety is\nalso called out. "In partnership with the private sector and the open-source\nsoftware community, the Federal Government will also continue to invest in\ndeveloping secure software, including memory-safe languages and software\ndevelopment techniques, frameworks, and testing tools." This document defines\n',(0,s.mdx)("em",{parentName:"p"},"safety")," and related terms to provide a framework to further the discussion with\nactionable guidance regarding the correct use of C++.- ",(0,s.mdx)("em",{parentName:"p"},"Sean Parent")," - May 20,\n2023"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"./cpp-successor-update/"},"View Whitepaper")),(0,s.mdx)(m,{slots:"image, heading, text, links",width:"33%",mdxType:"TextBlock"}),(0,s.mdx)("p",null,(0,s.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"500px"}},"\n      ",(0,s.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"100%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,s.mdx)("picture",{parentName:"span"},"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/cpp-at-adobe/static/6e5b02ee65d524847837f6afae0f93a9/5530d/object-validity-state-value.webp 320w","/cpp-at-adobe/static/6e5b02ee65d524847837f6afae0f93a9/601b1/object-validity-state-value.webp 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/webp"}),"\n          ",(0,s.mdx)("source",{parentName:"picture",srcSet:["/cpp-at-adobe/static/6e5b02ee65d524847837f6afae0f93a9/8980b/object-validity-state-value.jpg 320w","/cpp-at-adobe/static/6e5b02ee65d524847837f6afae0f93a9/953fe/object-validity-state-value.jpg 500w"],sizes:"(max-width: 500px) 100vw, 500px",type:"image/jpeg"}),"\n          ",(0,s.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/cpp-at-adobe/static/6e5b02ee65d524847837f6afae0f93a9/953fe/object-validity-state-value.jpg",alt:"C++ logo",title:"C++ logo",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,s.mdx)("h4",{id:"defining-object-validity-state-and-value"},"Defining Object, Validity, State, and Value"),(0,s.mdx)("p",null,'This document introduces a vocabulary and conceptual framework for dealing with\nobjects and validity in C++. We begin by exploring the limitations of existing\nmodels and relevant examples. We proceed by introducing the meaning of validity,\nobject, state, and value. Finally, we define "meaningless" and demonstrate\nits harmony with existing practice and desires. We discuss the implications of\nthis model for move semantics, correctness, and efficiency. - ',(0,s.mdx)("em",{parentName:"p"},"David Sankel")," -\nMay 19, 2023"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"./cpp-successor-update/"},"View Whitepaper")),(0,s.mdx)("h2",{id:"2023"},"2023"),(0,s.mdx)("h3",{id:"memory-safety-and-c-successors-1"},(0,s.mdx)("a",{parentName:"h3",href:"./cpp-successor-update/"},"Memory safety and C++ successors")),(0,s.mdx)("p",null,"Software exploits increasingly harm consumers and threaten national security.\nMemory safe programming languages provide substantial protection and some groups\nare calling for legislation incentivizing their adoption. Unfortunately, it\nisn't clear how companies with large existing C++ codebases can adapt. In an\neffort to help answer that question, this paper explores the adoption\nfeasibility of several memory safe alternatives to C++.",(0,s.mdx)("br",{parentName:"p"}),"\n",(0,s.mdx)("em",{parentName:"p"},"David Sankel")," ","—"," May 22, 2023"),(0,s.mdx)("h3",{id:"safety-in-the-context-of-c-1"},(0,s.mdx)("a",{parentName:"h3",href:"./cpp-successor-update/"},"Safety in the context of C++")),(0,s.mdx)("p",null,"Safety, particularly ",(0,s.mdx)("em",{parentName:"p"},"memory safety"),', is a growing concern in the C++ community\ndriven by the security implications of memory unsafe systems. Consumer Reports\nstates, "Roughly 60 to 70 percent of browser and kernel vulnerabilities, and\nsecurity bugs found in C/C++ code bases, are due to memory unsafety.". A recent\nNSA report states, "...the overarching software community across the private\nsector, academia, and the U.S. Government have begun initiatives to drive the\nsoftware development culture towards utilizing memory safe languages." The White\nHouse National Cybersecurity Strategy plans to hold companies responsible for\nretained data and increase liability for insecure software. Memory safety is\nalso called out. "In partnership with the private sector and the open-source\nsoftware community, the Federal Government will also continue to invest in\ndeveloping secure software, including memory-safe languages and software\ndevelopment techniques, frameworks, and testing tools." This document defines\n',(0,s.mdx)("em",{parentName:"p"},"safety")," and related terms to provide a framework to further the discussion with\nactionable guidance regarding the correct use of C++.",(0,s.mdx)("br",{parentName:"p"}),"\n",(0,s.mdx)("em",{parentName:"p"},"Sean Parent")," ","—"," May 20, 2023"),(0,s.mdx)("h3",{id:"defining-object-validity-state-and-value-1"},(0,s.mdx)("a",{parentName:"h3",href:"./cpp-successor-update"},"Defining Object, Validity, State, and Value")),(0,s.mdx)("p",null,'This document introduces a vocabulary and conceptual framework for dealing with\nobjects and validity in C++. We begin by exploring the limitations of existing\nmodels and relevant examples. We proceed by introducing the meaning of validity,\nobject, state, and value. Finally, we define "meaningless" and demonstrate\nits harmony with existing practice and desires. We discuss the implications of\nthis model for move semantics, correctness, and efficiency.',(0,s.mdx)("br",{parentName:"p"}),"\n",(0,s.mdx)("em",{parentName:"p"},"David Sankel")," ","—"," May 19, 2023"))}g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-whitepapers-index-md-61253b3b71823c372093.js.map